{
  "hash": "281e21497070189b9b68f2b5ceade4af325afdb2d05f89ba6f700985d2d130d1",
  "openapi": "3.0.0",
  "paths": {
    "/hello": {
      "get": {
        "operationId": "hello",
        "summary": "",
        "description": "health check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Hello!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResult"
                }
              }
            }
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/auth/@login": {
      "post": {
        "operationId": "login",
        "summary": "",
        "description": "login with username/phone/email and password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session with token has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/@loginByEmail": {
      "post": {
        "operationId": "loginByEmail",
        "summary": "",
        "description": "login with email and code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginByEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session with token has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/@loginByPhone": {
      "post": {
        "operationId": "loginByPhone",
        "summary": "",
        "description": "login with phone and code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginByPhoneDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session with token has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/@register": {
      "post": {
        "operationId": "register",
        "summary": "",
        "description": "register with username and password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/@registerByPhone": {
      "post": {
        "operationId": "registerByPhone",
        "summary": "",
        "description": "register with phone and code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterbyPhoneDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/@registerByEmail": {
      "post": {
        "operationId": "registerByEmail",
        "summary": "",
        "description": "register with email and code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterByEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user just created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/@signToken": {
      "post": {
        "operationId": "signToken",
        "summary": "",
        "description": "sign token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The token has been successfully signed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/@refresh": {
      "post": {
        "operationId": "refresh",
        "summary": "",
        "description": "refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session with token has been successfully refreshed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithToken"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "createUser",
        "summary": "",
        "description": "Create user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "get": {
        "operationId": "listUsers",
        "summary": "",
        "description": "List users",
        "parameters": [
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createdAt",
                "-createdAt",
                "updatedAt",
                "-updatedAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "按 id 筛选",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name_like",
            "required": false,
            "in": "query",
            "description": "名称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username_like",
            "required": false,
            "in": "query",
            "description": "用户名 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nickname_like",
            "required": false,
            "in": "query",
            "description": "昵称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ns",
            "required": false,
            "in": "query",
            "description": "所属命名空间的 ns 本级查询",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ns_start",
            "required": false,
            "in": "query",
            "description": "所属命名空间的前缀匹配查询",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "username",
            "required": false,
            "in": "query",
            "description": "用户名",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "邮箱",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "required": false,
            "in": "query",
            "description": "手机号",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registerRegion",
            "required": false,
            "in": "query",
            "description": "注册地区，存地区编号",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roles",
            "required": false,
            "in": "query",
            "description": "角色",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUser",
        "summary": "",
        "description": "Find user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "User id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user with expected id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "patch": {
        "operationId": "updateUser",
        "summary": "",
        "description": "Update user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "",
        "description": "Delete user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/users/{userId}/@verifyIdentity": {
      "post": {
        "operationId": "verifyIdentity",
        "summary": "",
        "description": "Verify identity",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user has been verified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/users/{userId}/@resetPassword": {
      "post": {
        "operationId": "resetPassword",
        "summary": "",
        "description": "Reset password",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/users/{userId}/@updatePassword": {
      "post": {
        "operationId": "updatePassword",
        "summary": "",
        "description": "Update password",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/namespaces": {
      "post": {
        "operationId": "createNamespace",
        "summary": "",
        "description": "Create namespace",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNamespaceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The namespace has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            }
          }
        },
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listNamespaces",
        "summary": "",
        "description": "List namespaces",
        "parameters": [
          {
            "name": "ns",
            "required": false,
            "in": "query",
            "description": "所属命名空间",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ns_start",
            "required": false,
            "in": "query",
            "description": "所属命名空间 start 查询",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createdAt",
                "-createdAt",
                "updatedAt",
                "-updatedAt",
                "key",
                "-key",
                "name",
                "-name"
              ],
              "type": "string"
            }
          },
          {
            "name": "name_like",
            "required": false,
            "in": "query",
            "description": "名称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "required": false,
            "in": "query",
            "description": "标签",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "description": "命名空间的 key\n\n允许的字符 ^[a-zA-Z][a-zA-Z0-9._/-]{0,30}$",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of namespaces.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Namespace"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/namespaces/{namespaceIdOrKey}": {
      "get": {
        "operationId": "getNamespace",
        "summary": "",
        "description": "Find namespace by id or key",
        "parameters": [
          {
            "name": "namespaceIdOrKey",
            "required": true,
            "in": "path",
            "description": "Namespace id or key, if key should encodeURIComponent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The namespace with expected id or key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            }
          }
        },
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/namespaces/{namespaceId}": {
      "patch": {
        "operationId": "updateNamespace",
        "summary": "",
        "description": "Update namespace",
        "parameters": [
          {
            "name": "namespaceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNamespaceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The namespace updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            }
          }
        },
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteNamespace",
        "summary": "",
        "description": "Delete namespace",
        "parameters": [
          {
            "name": "namespaceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/sessions": {
      "post": {
        "operationId": "createSession",
        "summary": "",
        "description": "Create session",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The session has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "session"
        ]
      },
      "get": {
        "operationId": "listSessions",
        "summary": "",
        "description": "List sessions",
        "parameters": [
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createdAt",
                "-createdAt",
                "updatedAt",
                "-updatedAt",
                "expireAt",
                "-expireAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "description": "用 key 进行查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client",
            "required": false,
            "in": "query",
            "description": "客户端/设备",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "required": false,
            "in": "query",
            "description": "用户 ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of sessions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Session"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "session"
        ]
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "operationId": "getSession",
        "summary": "",
        "description": "Find session by id",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The session with expected id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "session"
        ]
      },
      "patch": {
        "operationId": "updateSession",
        "summary": "",
        "description": "Update session",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "tags": [
          "session"
        ]
      },
      "delete": {
        "operationId": "deleteSession",
        "summary": "",
        "description": "Delete session",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "session"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/captchas": {
      "post": {
        "operationId": "createCaptcha",
        "summary": "",
        "description": "Create captcha",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCaptchaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The captcha has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Captcha"
                }
              }
            }
          }
        },
        "tags": [
          "captcha"
        ]
      },
      "get": {
        "operationId": "listCaptchas",
        "summary": "",
        "description": "List captchas",
        "parameters": [
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createdAt",
                "-createdAt",
                "updatedAt",
                "-updatedAt",
                "expireAt",
                "-expireAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": false,
            "in": "query",
            "description": "验证码",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "description": "key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of captchas.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Captcha"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "captcha"
        ]
      }
    },
    "/captchas/{captchaId}": {
      "get": {
        "operationId": "getCaptcha",
        "summary": "",
        "description": "Find captcha by id",
        "parameters": [
          {
            "name": "captchaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The captcha with expected id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Captcha"
                }
              }
            }
          }
        },
        "tags": [
          "captcha"
        ]
      },
      "patch": {
        "operationId": "updateCaptcha",
        "summary": "",
        "description": "Update captcha",
        "parameters": [
          {
            "name": "captchaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCaptchaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The captcha updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Captcha"
                }
              }
            }
          }
        },
        "tags": [
          "captcha"
        ]
      },
      "delete": {
        "operationId": "deleteCaptcha",
        "summary": "",
        "description": "Delete captcha",
        "parameters": [
          {
            "name": "captchaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "captcha"
        ]
      }
    },
    "/email/@sendEmail": {
      "post": {
        "operationId": "sendEmail",
        "summary": "",
        "description": "Send plain text email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "email"
        ]
      }
    },
    "/email/records": {
      "post": {
        "operationId": "createEmailRecord",
        "summary": "",
        "description": "Create email record",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailRecordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The email record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailRecord"
                }
              }
            }
          }
        },
        "tags": [
          "emailRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listEmailRecords",
        "summary": "",
        "description": "List email records",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "发送状态",
            "schema": {
              "$ref": "#/components/schemas/EmailStatus"
            }
          },
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createdAt",
                "-createdAt",
                "updatedAt",
                "-updatedAt",
                "sentAt",
                "-sentAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "createdAt_gt",
            "required": false,
            "in": "query",
            "description": "创建时间大于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAt_lt",
            "required": false,
            "in": "query",
            "description": "创建时间小于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "sentAt_gt",
            "required": false,
            "in": "query",
            "description": "发送时间大于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "sentAt_lt",
            "required": false,
            "in": "query",
            "description": "发送时间小于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "发件者",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "收件者",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of email records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailRecord"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "emailRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/email/records/{emailRecordId}": {
      "get": {
        "operationId": "getEmailRecord",
        "summary": "",
        "description": "Find email record by id",
        "parameters": [
          {
            "name": "emailRecordId",
            "required": true,
            "in": "path",
            "description": "Email record id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The email record with expected id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailRecord"
                }
              }
            }
          }
        },
        "tags": [
          "emailRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateEmailRecord",
        "summary": "",
        "description": "Update email record",
        "parameters": [
          {
            "name": "emailRecordId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailRecord"
                }
              }
            }
          }
        },
        "tags": [
          "emailRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteEmailRecord",
        "summary": "",
        "description": "Delete email record",
        "parameters": [
          {
            "name": "emailRecordId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "emailRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/industries": {
      "get": {
        "operationId": "listIndustries",
        "summary": "",
        "description": "List Industries",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A paged array of region.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Industry"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "industry"
        ]
      }
    },
    "/groups": {
      "post": {
        "operationId": "createGroup",
        "summary": "",
        "description": "Create group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The group has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags": [
          "group"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listGroups",
        "summary": "",
        "description": "List groups",
        "parameters": [
          {
            "name": "ns",
            "required": false,
            "in": "query",
            "description": "所属命名空间",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ns_start",
            "required": false,
            "in": "query",
            "description": "所属命名空间 start 查询",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createdAt",
                "-createdAt",
                "updatedAt",
                "-updatedAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "name_like",
            "required": false,
            "in": "query",
            "description": "名称 模糊查询",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "名称",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of groups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "group"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/groups/{groupIdOrName}": {
      "get": {
        "operationId": "getGroup",
        "summary": "",
        "description": "Find group by id or name",
        "parameters": [
          {
            "name": "groupIdOrName",
            "required": true,
            "in": "path",
            "description": "Group id or name, if name should encodeURIComponent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The group with expected id or name.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags": [
          "group"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/groups/{groupId}": {
      "patch": {
        "operationId": "updateGroup",
        "summary": "",
        "description": "Update group",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The group updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags": [
          "group"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteGroup",
        "summary": "",
        "description": "Delete group",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "group"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/regions": {
      "get": {
        "operationId": "listRegions",
        "summary": "",
        "description": "List Regions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A paged array of region.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "region"
        ]
      }
    },
    "/sms/@sendSms": {
      "post": {
        "operationId": "sendSms",
        "summary": "",
        "description": "Send sms",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSmsDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "sms"
        ]
      }
    },
    "/sms/records": {
      "post": {
        "operationId": "createSmsRecord",
        "summary": "",
        "description": "Create sms record",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSmsRecordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The sms record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsRecord"
                }
              }
            }
          }
        },
        "tags": [
          "smsRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listSmsRecords",
        "summary": "",
        "description": "List sms records",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "发送状态",
            "schema": {
              "$ref": "#/components/schemas/SmsStatus"
            }
          },
          {
            "name": "_sort",
            "required": false,
            "in": "query",
            "description": "排序参数",
            "schema": {
              "enum": [
                "createdAt",
                "-createdAt",
                "updatedAt",
                "-updatedAt",
                "sentAt",
                "-sentAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "createdAt_gt",
            "required": false,
            "in": "query",
            "description": "创建时间大于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAt_lt",
            "required": false,
            "in": "query",
            "description": "创建时间小于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "sentAt_gt",
            "required": false,
            "in": "query",
            "description": "发送时间大于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "sentAt_lt",
            "required": false,
            "in": "query",
            "description": "发送时间小于该时间",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "phone",
            "required": false,
            "in": "query",
            "description": "手机号",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sign",
            "required": false,
            "in": "query",
            "description": "签名",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "description": "分页大小",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "description": "分页偏移",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of sms records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsRecord"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "smsRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/sms/records/{smsRecordId}": {
      "get": {
        "operationId": "getSmsRecord",
        "summary": "",
        "description": "Find sms record by id",
        "parameters": [
          {
            "name": "smsRecordId",
            "required": true,
            "in": "path",
            "description": "Sms record id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The sms record with expected id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsRecord"
                }
              }
            }
          }
        },
        "tags": [
          "smsRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "updateSmsRecord",
        "summary": "",
        "description": "Update sms record",
        "parameters": [
          {
            "name": "smsRecordId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSmsRecordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The sms record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsRecord"
                }
              }
            }
          }
        },
        "tags": [
          "smsRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteSmsRecord",
        "summary": "",
        "description": "Delete sms record",
        "parameters": [
          {
            "name": "smsRecordId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "smsRecord"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Auth API Server",
    "description": "Auth API for auth service",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "HealthCheckResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "可以是 username/phone/Email"
          },
          "password": {
            "type": "string",
            "description": "密码"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "密码",
            "writeOnly": true
          },
          "hasPassword": {
            "type": "boolean",
            "description": "是否有密码",
            "readOnly": true
          },
          "avatar": {
            "type": "string",
            "description": "头像"
          },
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "name": {
            "type": "string",
            "description": "姓名"
          },
          "identity": {
            "type": "string"
          },
          "identityVerifiedAt": {
            "format": "date-time",
            "type": "string",
            "description": "实名认证时间"
          },
          "identityVerified": {
            "type": "boolean",
            "description": "实名认证是否通过"
          },
          "intro": {
            "type": "string",
            "description": "简介"
          },
          "language": {
            "type": "string",
            "description": "使用语言"
          },
          "lastLoginIp": {
            "type": "string",
            "description": "最后登录 IP"
          },
          "lastSeenAt": {
            "format": "date-time",
            "type": "string",
            "description": "最后活跃时间"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "registerIp": {
            "type": "string",
            "description": "注册 IP"
          },
          "registerRegion": {
            "type": "string",
            "description": "注册地区，存地区编号"
          },
          "roles": {
            "description": "角色",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "super": {
            "type": "boolean",
            "description": "是否超级管理员"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "employeeId": {
            "type": "string",
            "description": "员工编号"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groups": {
            "description": "团队",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastLoginAt": {
            "format": "date-time",
            "type": "string",
            "description": "最后登录时间"
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "id"
        ]
      },
      "SessionWithToken": {
        "type": "object",
        "properties": {
          "acl": {
            "type": "object",
            "description": "访问控制列表"
          },
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "key": {
            "type": "string",
            "description": "refresh token key"
          },
          "user": {
            "description": "用户，实际存储 uid",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "client": {
            "type": "string",
            "description": "客户端/设备"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          },
          "token": {
            "type": "string",
            "description": "token"
          },
          "tokenExpireAt": {
            "format": "date-time",
            "type": "string",
            "description": "token 过期时间"
          }
        },
        "required": [
          "expireAt",
          "key",
          "user",
          "id",
          "token",
          "tokenExpireAt"
        ]
      },
      "LoginByEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "key": {
            "type": "string",
            "description": "验证码 key"
          },
          "code": {
            "type": "string",
            "description": "验证码 code"
          }
        },
        "required": [
          "email",
          "key",
          "code"
        ]
      },
      "LoginByPhoneDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "key": {
            "type": "string",
            "description": "验证码 key"
          },
          "code": {
            "type": "string",
            "description": "验证码 code"
          }
        },
        "required": [
          "phone",
          "key",
          "code"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "password": {
            "type": "string",
            "description": "密码"
          },
          "ns": {
            "type": "string",
            "description": "命名空间"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RegisterbyPhoneDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "key": {
            "type": "string",
            "description": "验证码 key"
          },
          "code": {
            "type": "string",
            "description": "验证码 code"
          },
          "ns": {
            "type": "string",
            "description": "命名空间"
          }
        },
        "required": [
          "phone",
          "key",
          "code"
        ]
      },
      "RegisterByEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "key": {
            "type": "string",
            "description": "验证码 key"
          },
          "code": {
            "type": "string",
            "description": "验证码 code"
          },
          "ns": {
            "type": "string",
            "description": "命名空间"
          }
        },
        "required": [
          "email",
          "key",
          "code"
        ]
      },
      "SignTokenDto": {
        "type": "object",
        "properties": {
          "expiresIn": {
            "type": "string",
            "description": "short time span string\n\nrefs: https://github.com/vercel/ms\n\neg: \"2 days\", \"10h\", \"7d\", \"120s\", \"2.5 hrs\", \"2h\", \"1m\", \"5s\", \"1y\", \"100\", \"1y1m1d\"\n\nm => minute\nh => hour\nd => day\nw => week\nM => month\ny => year\ns => second\nms => millisecond\n无单位 => millisecond"
          },
          "acl": {
            "type": "object",
            "description": "访问控制列表"
          },
          "uid": {
            "type": "string",
            "description": "user id"
          }
        },
        "required": [
          "expiresIn",
          "uid"
        ]
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token"
          },
          "tokenExpireAt": {
            "format": "date-time",
            "type": "string",
            "description": "token 过期时间"
          }
        },
        "required": [
          "token",
          "tokenExpireAt"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "user id"
          }
        },
        "required": [
          "key"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "密码",
            "writeOnly": true
          },
          "hasPassword": {
            "type": "boolean",
            "description": "是否有密码",
            "readOnly": true
          },
          "avatar": {
            "type": "string",
            "description": "头像"
          },
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "name": {
            "type": "string",
            "description": "姓名"
          },
          "identity": {
            "type": "string"
          },
          "identityVerifiedAt": {
            "format": "date-time",
            "type": "string",
            "description": "实名认证时间"
          },
          "identityVerified": {
            "type": "boolean",
            "description": "实名认证是否通过"
          },
          "intro": {
            "type": "string",
            "description": "简介"
          },
          "language": {
            "type": "string",
            "description": "使用语言"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "registerRegion": {
            "type": "string",
            "description": "注册地区，存地区编号"
          },
          "roles": {
            "description": "角色",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "super": {
            "type": "boolean",
            "description": "是否超级管理员"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "employeeId": {
            "type": "string",
            "description": "员工编号"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groups": {
            "description": "团队",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "hasPassword": {
            "type": "boolean",
            "description": "是否有密码",
            "readOnly": true
          },
          "avatar": {
            "type": "string",
            "description": "头像"
          },
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "name": {
            "type": "string",
            "description": "姓名"
          },
          "identity": {
            "type": "string"
          },
          "identityVerifiedAt": {
            "format": "date-time",
            "type": "string",
            "description": "实名认证时间"
          },
          "identityVerified": {
            "type": "boolean",
            "description": "实名认证是否通过"
          },
          "intro": {
            "type": "string",
            "description": "简介"
          },
          "language": {
            "type": "string",
            "description": "使用语言"
          },
          "lastLoginIp": {
            "type": "string",
            "description": "最后登录 IP"
          },
          "lastSeenAt": {
            "format": "date-time",
            "type": "string",
            "description": "最后活跃时间"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "registerIp": {
            "type": "string",
            "description": "注册 IP"
          },
          "registerRegion": {
            "type": "string",
            "description": "注册地区，存地区编号"
          },
          "roles": {
            "description": "角色",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "super": {
            "type": "boolean",
            "description": "是否超级管理员"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "employeeId": {
            "type": "string",
            "description": "员工编号"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groups": {
            "description": "团队",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastLoginAt": {
            "format": "date-time",
            "type": "string",
            "description": "最后登录时间"
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          }
        }
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "密码"
          }
        }
      },
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "旧密码"
          },
          "newPassword": {
            "type": "string",
            "description": "新密码"
          }
        },
        "required": [
          "newPassword"
        ]
      },
      "CreateNamespaceDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "labels": {
            "description": "标签",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "key": {
            "type": "string",
            "description": "命名空间的 key\n\n允许的字符 ^[a-zA-Z][a-zA-Z0-9._/-]{0,30}$"
          },
          "ns": {
            "type": "string",
            "description": "所属的 namespace"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          },
          "company": {
            "type": "string",
            "description": "公司"
          },
          "defaultPassword": {
            "type": "string",
            "description": "默认密码"
          }
        },
        "required": [
          "name",
          "key"
        ]
      },
      "Namespace": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "labels": {
            "description": "标签",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "key": {
            "type": "string",
            "description": "命名空间的 key\n\n允许的字符 ^[a-zA-Z][a-zA-Z0-9._/-]{0,30}$"
          },
          "ns": {
            "type": "string",
            "description": "所属的 namespace"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          },
          "company": {
            "type": "string",
            "description": "公司"
          },
          "defaultPassword": {
            "type": "string",
            "description": "默认密码"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "name",
          "key",
          "id"
        ]
      },
      "UpdateNamespaceDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "额外数据"
          },
          "desc": {
            "type": "string",
            "description": "描述"
          },
          "labels": {
            "description": "标签",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          },
          "company": {
            "type": "string",
            "description": "公司"
          },
          "defaultPassword": {
            "type": "string",
            "description": "默认密码"
          }
        }
      },
      "CreateSessionDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "用户 ID"
          },
          "acl": {
            "type": "object",
            "description": "访问控制列表"
          },
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "client": {
            "type": "string",
            "description": "客户端/设备"
          }
        },
        "required": [
          "uid",
          "expireAt"
        ]
      },
      "Session": {
        "type": "object",
        "properties": {
          "acl": {
            "type": "object",
            "description": "访问控制列表"
          },
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "key": {
            "type": "string",
            "description": "refresh token key"
          },
          "user": {
            "description": "用户，实际存储 uid",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "client": {
            "type": "string",
            "description": "客户端/设备"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "expireAt",
          "key",
          "user",
          "id"
        ]
      },
      "UpdateSessionDto": {
        "type": "object",
        "properties": {
          "acl": {
            "type": "object",
            "description": "访问控制列表"
          },
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "会话过期时间"
          },
          "client": {
            "type": "string",
            "description": "客户端/设备"
          },
          "uid": {
            "type": "string",
            "description": "用户 ID"
          }
        }
      },
      "CreateCaptchaDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "验证码"
          },
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "过期时间"
          },
          "key": {
            "type": "string",
            "description": "key"
          }
        },
        "required": [
          "key"
        ]
      },
      "Captcha": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "验证码"
          },
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "过期时间"
          },
          "key": {
            "type": "string",
            "description": "key"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "code",
          "expireAt",
          "key",
          "id"
        ]
      },
      "UpdateCaptchaDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "验证码"
          },
          "expireAt": {
            "format": "date-time",
            "type": "string",
            "description": "过期时间"
          },
          "key": {
            "type": "string",
            "description": "key"
          }
        }
      },
      "SendEmailDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "from",
          "to",
          "subject",
          "content"
        ]
      },
      "EmailStatus": {
        "type": "string",
        "description": "发送状态",
        "enum": [
          "pending",
          "sent"
        ]
      },
      "CreateEmailRecordDto": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/EmailStatus"
          },
          "from": {
            "type": "string",
            "description": "发件者"
          },
          "to": {
            "type": "string",
            "description": "收件者"
          },
          "subject": {
            "type": "string",
            "description": "主题"
          },
          "content": {
            "type": "string",
            "description": "内容"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string",
            "description": "发送时间"
          }
        },
        "required": [
          "status",
          "from",
          "to",
          "subject",
          "content"
        ]
      },
      "EmailRecord": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/EmailStatus"
          },
          "from": {
            "type": "string",
            "description": "发件者"
          },
          "to": {
            "type": "string",
            "description": "收件者"
          },
          "subject": {
            "type": "string",
            "description": "主题"
          },
          "content": {
            "type": "string",
            "description": "内容"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string",
            "description": "发送时间"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "status",
          "from",
          "to",
          "subject",
          "content",
          "id"
        ]
      },
      "UpdateEmailRecordDto": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/EmailStatus"
          },
          "from": {
            "type": "string",
            "description": "发件者"
          },
          "to": {
            "type": "string",
            "description": "收件者"
          },
          "subject": {
            "type": "string",
            "description": "主题"
          },
          "content": {
            "type": "string",
            "description": "内容"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string",
            "description": "发送时间"
          }
        }
      },
      "Industry": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "编码"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "children": {
            "description": "子集",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Industry"
            }
          }
        },
        "required": [
          "code",
          "name",
          "children"
        ]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "名称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          }
        },
        "required": [
          "name"
        ]
      },
      "Group": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "名称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "UpdateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "名称"
          },
          "ns": {
            "type": "string",
            "description": "所属命名空间"
          },
          "permissions": {
            "description": "权限",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "description": "是否启用"
          }
        },
        "required": [
          "name"
        ]
      },
      "Region": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "缩写"
          },
          "nameZh": {
            "type": "string",
            "description": "中文名称"
          },
          "namePinyin": {
            "type": "string",
            "description": "中文拼音"
          },
          "nameEn": {
            "type": "string",
            "description": "英文名称"
          },
          "dialingPrefix": {
            "type": "string",
            "description": "电话前缀"
          }
        },
        "required": [
          "code",
          "nameZh",
          "namePinyin",
          "nameEn",
          "dialingPrefix"
        ]
      },
      "SendSmsDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "sign": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "params": {
            "type": "object"
          }
        },
        "required": [
          "phone",
          "sign",
          "template"
        ]
      },
      "SmsStatus": {
        "type": "string",
        "description": "发送状态",
        "enum": [
          "pending",
          "sent"
        ]
      },
      "CreateSmsRecordDto": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SmsStatus"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "sign": {
            "type": "string",
            "description": "签名"
          },
          "template": {
            "type": "string",
            "description": "模板"
          },
          "params": {
            "type": "string",
            "description": "参数"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string",
            "description": "发送时间"
          }
        },
        "required": [
          "status",
          "phone",
          "sign",
          "template"
        ]
      },
      "SmsRecord": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SmsStatus"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "sign": {
            "type": "string",
            "description": "签名"
          },
          "template": {
            "type": "string",
            "description": "模板"
          },
          "params": {
            "type": "string",
            "description": "参数"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string",
            "description": "发送时间"
          },
          "id": {
            "type": "string",
            "description": "Entity id"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity created at when"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Entity updated at when"
          },
          "createdBy": {
            "type": "string",
            "description": "Entity created by who"
          },
          "updatedBy": {
            "type": "string",
            "description": "Entity updated by who"
          }
        },
        "required": [
          "status",
          "phone",
          "sign",
          "template",
          "id"
        ]
      },
      "UpdateSmsRecordDto": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SmsStatus"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "sign": {
            "type": "string",
            "description": "签名"
          },
          "template": {
            "type": "string",
            "description": "模板"
          },
          "params": {
            "type": "string",
            "description": "参数"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string",
            "description": "发送时间"
          }
        }
      }
    }
  }
}